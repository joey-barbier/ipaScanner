events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log;

    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 100M;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private must-revalidate;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/m;
    limit_req_zone $binary_remote_addr zone=upload:10m rate=2r/m;

    upstream backend {
        server ipascanner:8080;
        keepalive 32;
    }

    server {
        listen 80;
        server_name localhost ipascanner.local;
        
        # Redirect HTTP to HTTPS in production
        # return 301 https://$server_name$request_uri;
        
        # For local development, serve directly
        location / {
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support (for future real-time features)
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
        
        # API endpoints with rate limiting
        location /api/ {
            limit_req zone=api burst=5 nodelay;
            
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Longer timeout for analysis
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;
        }
        
        # Upload endpoint with stricter rate limiting
        location /api/v1/analysis/upload {
            limit_req zone=upload burst=2 nodelay;
            
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Extended timeout for large file uploads
            proxy_read_timeout 600s;
            proxy_send_timeout 600s;
            client_max_body_size 100M;
        }
        
        # Static file caching
        location ~* \\.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
            expires 1M;
            add_header Cache-Control "public, immutable";
            
            proxy_pass http://backend;
            proxy_set_header Host $host;
        }
    }

    # HTTPS server (uncomment for production)
    #server {
    #    listen 443 ssl http2;
    #    server_name your-domain.com;
    #
    #    ssl_certificate /etc/nginx/ssl/cert.pem;
    #    ssl_certificate_key /etc/nginx/ssl/key.pem;
    #    ssl_session_timeout 1d;
    #    ssl_session_cache shared:MozTLS:10m;
    #    ssl_session_tickets off;
    #
    #    ssl_protocols TLSv1.2 TLSv1.3;
    #    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    #    ssl_prefer_server_ciphers off;
    #
    #    add_header Strict-Transport-Security "max-age=63072000" always;
    #
    #    location / {
    #        proxy_pass http://backend;
    #        proxy_set_header Host $host;
    #        proxy_set_header X-Real-IP $remote_addr;
    #        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #        proxy_set_header X-Forwarded-Proto $scheme;
    #    }
    #}
}