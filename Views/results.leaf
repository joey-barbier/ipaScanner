<!DOCTYPE html>
<html lang="#(language)">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>#t("analysis.results.title") - #t("app.title")</title>
    <!-- Favicon -->
    <link rel="icon" type="image/png" href="/icon.png">
    <link rel="apple-touch-icon" href="/icon.png">
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <!-- Analytics -->
    <script defer data-domain="ipa.tips" src="https://analytics.orka.pw/js/script.js"></script>
    <style>
        .gradient-bg { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); }
        .card-shadow { box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04); }
        .metric-card { transition: transform 0.3s ease, box-shadow 0.3s ease; }
        .metric-card:hover { transform: translateY(-5px); box-shadow: 0 20px 40px -10px rgba(0, 0, 0, 0.15); }
        .chart-container { position: relative; height: 400px; }
        .completed-card { background: linear-gradient(135deg, #d1fae5 0%, #a7f3d0 100%); border-color: #10b981; }
        .hidden { display: none !important; }

        /* Enhanced Suggestions Styles */
        .suggestion-card {
            transition: all 0.2s ease-in-out;
            cursor: pointer;
        }
        
        .suggestion-card:hover {
            transform: translateY(-2px);
        }
        
        .savings-badge {
            background: linear-gradient(135deg, #10b981, #059669);
            color: white;
            font-weight: 600;
        }
        
        .action-button:hover {
            background-color: #f9fafb;
            transform: translateY(-1px);
        }
        
        /* Fix button specific styles to override action-button */
        .fix-button:hover {
            background-color: #2563eb !important; /* blue-600 */
            color: white !important;
            transform: translateY(-1px);
        }
        
        .priority-section {
            animation: fadeInUp 0.5s ease-out;
        }
        
        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
    </style>
</head>
<body class="bg-gray-50">
    <!-- Navigation -->
    <nav class="gradient-bg shadow-lg">
        <div class="container mx-auto px-6 py-3">
            <div class="flex items-center justify-between">
                <div class="text-white font-bold text-xl">
                    <i class="fas fa-mobile-alt mr-2"></i>
                    #t("app.title")
                </div>
                <div class="flex space-x-6">
                    <button onclick="window.location.href = '/'" class="text-white hover:text-blue-200 transition">
                        <i class="fas fa-arrow-left mr-1"></i> #t("navigation.home")
                    </button>
                </div>
            </div>
        </div>
    </nav>

    <main class="min-h-screen">
        <div class="container mx-auto px-6 py-8">
            <!-- Header Section -->
            <div class="text-center mb-8">
                <h1 class="text-4xl font-bold text-gray-800 mb-2 flex items-center justify-center gap-3" id="appName">
                    <img src="/icon.png" alt="IPA Scanner" class="w-12 h-12 rounded-xl shadow-lg">
                    <span>#t("analysis.progress.finalizing")...</span>
                </h1>
                <p class="text-xl text-gray-600" id="appVersion">#t("analysis.progress.complete")</p>
            </div>

            <!-- Key Metrics Cards -->
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8" id="metricsCards">
                <div class="bg-white rounded-xl card-shadow p-6 metric-card">
                    <div class="flex items-center justify-between">
                        <div>
                            <p class="text-sm font-medium text-gray-600">#t("metrics.app_size")</p>
                            <p class="text-2xl font-bold text-blue-600" id="totalSize">...</p>
                        </div>
                        <div class="p-3 bg-blue-100 rounded-full">
                            <i class="fas fa-weight text-blue-600 text-xl"></i>
                        </div>
                    </div>
                </div>

                <div class="bg-white rounded-xl card-shadow p-6 metric-card">
                    <div class="flex items-center justify-between">
                        <div>
                            <p class="text-sm font-medium text-gray-600">#t("metrics.files_count")</p>
                            <p class="text-2xl font-bold text-green-600" id="fileCount">...</p>
                        </div>
                        <div class="p-3 bg-green-100 rounded-full">
                            <i class="fas fa-file-alt text-green-600 text-xl"></i>
                        </div>
                    </div>
                </div>

                <div class="bg-white rounded-xl card-shadow p-6 metric-card">
                    <div class="flex items-center justify-between">
                        <div>
                            <p class="text-sm font-medium text-gray-600">#t("metrics.frameworks")</p>
                            <p class="text-2xl font-bold text-purple-600" id="frameworksCount">...</p>
                        </div>
                        <div class="p-3 bg-purple-100 rounded-full">
                            <i class="fas fa-cubes text-purple-600 text-xl"></i>
                        </div>
                    </div>
                </div>

                <div class="bg-white rounded-xl card-shadow p-6 metric-card">
                    <div class="flex items-center justify-between">
                        <div>
                            <p class="text-sm font-medium text-gray-600">#t("metrics.potential_savings")</p>
                            <p class="text-2xl font-bold text-red-600" id="potentialSavings">...</p>
                        </div>
                        <div class="p-3 bg-red-100 rounded-full">
                            <i class="fas fa-compress text-red-600 text-xl"></i>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Tabbed Optimization Section -->
            <div class="bg-white rounded-xl card-shadow mb-6">
                <!-- Tab Navigation -->
                <div class="border-b border-gray-200">
                    <nav class="flex space-x-8 px-8 pt-6" aria-label="Tabs">
                        <button class="tab-button active border-blue-500 text-blue-600 whitespace-nowrap py-2 px-1 border-b-2 font-medium text-sm" data-tab="recommendations">
                            <i class="fas fa-lightbulb mr-2"></i>#t("tabs.recommendations")
                        </button>
                        <button class="tab-button border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 whitespace-nowrap py-2 px-1 border-b-2 font-medium text-sm" data-tab="expert-tips">
                            <i class="fas fa-graduation-cap mr-2"></i>#t("tabs.expert_tips")
                        </button>
                        <button class="tab-button border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 whitespace-nowrap py-2 px-1 border-b-2 font-medium text-sm" data-tab="assets-analysis">
                            <i class="fas fa-images mr-2"></i>#t("tabs.assets_analysis")
                        </button>
                        <button class="tab-button border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 whitespace-nowrap py-2 px-1 border-b-2 font-medium text-sm" data-tab="technical-details">
                            <i class="fas fa-cogs mr-2"></i>#t("tabs.technical_details")
                        </button>
                    </nav>
                </div>

                <!-- Tab Content -->
                <div class="p-8">
                    <!-- IPA Optimization Recommendations Tab -->
                    <div id="recommendations" class="tab-content active">
                        <div id="suggestionsContainer">
                            <p class="text-gray-600">#t("loading.recommendations")</p>
                        </div>
                    </div>

                    <!-- Expert Optimization Tips Tab -->
                    <div id="expert-tips" class="tab-content hidden">
                        <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
                            <div class="space-y-4">
                                <h4 class="font-semibold text-gray-800 mb-3"><i class="fas fa-rocket text-blue-500 mr-2"></i>#t("expert_tips.build_config")</h4>
                                <div class="bg-blue-50 rounded-lg p-4 text-sm">
                                    <p class="font-medium text-blue-800">#t("expert_tips.swift_compiler")</p>
                                    <p class="text-blue-700 mt-1">#t("expert_tips.swift_compiler_desc")</p>
                                </div>
                                <div class="bg-green-50 rounded-lg p-4 text-sm">
                                    <p class="font-medium text-green-800">#t("expert_tips.lto")</p>
                                    <p class="text-green-700 mt-1">#t("expert_tips.lto_desc")</p>
                                </div>
                                <div class="bg-purple-50 rounded-lg p-4 text-sm">
                                    <p class="font-medium text-purple-800">#t("expert_tips.strip_code")</p>
                                    <p class="text-purple-700 mt-1">#t("expert_tips.strip_code_desc")</p>
                                </div>
                            </div>
                            <div class="space-y-4">
                                <h4 class="font-semibold text-gray-800 mb-3"><i class="fas fa-layer-group text-orange-500 mr-2"></i>#t("expert_tips.asset_optimization")</h4>
                                <div class="bg-orange-50 rounded-lg p-4 text-sm">
                                    <p class="font-medium text-orange-800">#t("expert_tips.modern_formats")</p>
                                    <p class="text-orange-700 mt-1">#t("expert_tips.modern_formats_desc")</p>
                                </div>
                                <div class="bg-red-50 rounded-lg p-4 text-sm">
                                    <p class="font-medium text-red-800">#t("expert_tips.app_thinning")</p>
                                    <p class="text-red-700 mt-1">#t("expert_tips.app_thinning_desc")</p>
                                </div>
                                <div class="bg-yellow-50 rounded-lg p-4 text-sm">
                                    <p class="font-medium text-yellow-800">#t("expert_tips.on_demand_resources")</p>
                                    <p class="text-yellow-700 mt-1">#t("expert_tips.on_demand_resources_desc")</p>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Assets Analysis Details Tab -->
                    <div id="assets-analysis" class="tab-content hidden">
                        <div class="space-y-6">
                            <div>
                                <h4 class="font-semibold text-gray-800 mb-4"><i class="fas fa-file-image text-green-500 mr-2"></i>#t("assets_analysis.title")</h4>
                                <div class="space-y-3" id="assetResults">
                                    <p class="text-gray-600">#t("loading.asset_details")</p>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Technical Details Tab -->
                    <div id="technical-details" class="tab-content hidden">
                        <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
                            <div>
                                <h4 class="font-semibold text-gray-800 mb-4"><i class="fas fa-microchip text-purple-500 mr-2"></i>#t("technical_details.binary_info")</h4>
                                <div class="space-y-3" id="binaryDetails">
                                    <p class="text-gray-600">#t("loading.binary_info")</p>
                                </div>
                            </div>
                            <div>
                                <h4 class="font-semibold text-gray-800 mb-4"><i class="fas fa-globe text-blue-500 mr-2"></i>#t("technical_details.localization_info")</h4>
                                <div class="space-y-3" id="localizationDetails">
                                    <p class="text-gray-600">#t("loading.localization_details")</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- What's New -->
        </div>
    </main>

    <script>
        // Translations object for JavaScript (static values for MVP)
        const translations = {
            excellent: "Excellent",
            optimized_message: "Your IPA is already well optimized. No major issues found.",
            critical_issues: "🔥 Critical Issues",
            high_priority: "⚠️ High Priority",
            medium_priority: "🔧 Medium Priority",
            minor_optimizations: "💡 Minor Optimizations",
            impact: "Impact",
            how_to_fix: "How to Fix",
            impact_levels: {
                critical: "Critical",
                high: "High",
                medium: "Medium",
                low: "Low"
            },
            no_assets_car: "No Assets.car files found in this IPA.",
            implementation_guide: "Step-by-step implementation guide",
            start_implementation: "Start Implementation",
            guide_description: "Implementation guide with Xcode settings and code examples",
            got_it: "Got it",
            assets_analysis_results: "Assets.car Analysis Results",
            status_messages: {
                success: "✅ Analysis completed successfully",
                skipped: "⏭️ Analysis skipped (quick mode or large file)",
                failed: "❌ Analysis failed",
                timeout: "⏰ Analysis timed out",
                unknown: "🔍 Analysis status unknown"
            },
            size: "Size",
            assets: "Assets",
            duplicates: "Duplicates",
            unused: "Unused",
            optimization_potential: "Optimization potential",
            view_details: "📊 View Details",
            path: "Path",
            catalog_analysis: "📊 Asset Catalog Analysis",
            duplicate_groups: "🔄 Duplicate Assets ({0} groups)",
            identical_assets: "identical assets",
            keep_this: "← Keep this one",
            delete_this: "← Delete",
            waste: "waste",
            how_to_fix_duplicates: "Use Xcode's Asset Catalog inspector to review and remove duplicate images. Keep only one version of identical assets and update any references.",
            unused_assets: "🗑️ Potentially Unused Assets ({0})",
            unused_note: "⚠️ Note",
            unused_note_desc: "These are marked as potentially unused (iPad-specific assets). Verify they're not used in your iPad interface before removing.",
            assets_by_type: "📈 Assets by Type",
            optimization_tips: "💡 Optimization Tips",
            total_savings: "💰 Total potential savings",
            issue: "issue",
            issues: "issues", 
            potential_savings: "Potential savings",
            architecture: "Architecture",
            executable_size: "Executable Size",
            frameworks_size: "Frameworks Size",
            resources_size: "Resources Size",
            languages: "Languages",
            supported_devices: "Supported Devices",
            min_os_version: "Min OS Version",
            universal: "Universal"
        };

        // Tab functionality
        function initTabs() {
            const tabButtons = document.querySelectorAll('.tab-button');
            const tabContents = document.querySelectorAll('.tab-content');

            tabButtons.forEach(button => {
                button.addEventListener('click', () => {
                    const targetTab = button.getAttribute('data-tab');

                    // Remove active state from all buttons
                    tabButtons.forEach(btn => {
                        btn.classList.remove('active', 'border-blue-500', 'text-blue-600');
                        btn.classList.add('border-transparent', 'text-gray-500');
                    });

                    // Add active state to clicked button
                    button.classList.remove('border-transparent', 'text-gray-500');
                    button.classList.add('active', 'border-blue-500', 'text-blue-600');

                    // Hide all tab contents
                    tabContents.forEach(content => {
                        content.classList.add('hidden');
                        content.classList.remove('active');
                    });

                    // Show target tab content
                    const targetContent = document.getElementById(targetTab);
                    if (targetContent) {
                        targetContent.classList.remove('hidden');
                        targetContent.classList.add('active');
                    }
                });
            });
        }

        // Initialize tabs when page loads
        initTabs();

        // Load data from localStorage if available
        const storedData = localStorage.getItem('analysisData');
        if (storedData) {
            try {
                const data = JSON.parse(storedData);
                populateResultsFromData(data);
            } catch (e) {
                console.error('Error loading stored analysis data:', e);
            }
        }

        function populateResultsFromData(data) {
            // Basic info
            if (data.bundleName) {
                const appNameEl = document.getElementById('appName');
                appNameEl.innerHTML = `
                    <img src="/icon.png" alt="IPA Scanner" class="w-12 h-12 rounded-xl shadow-lg">
                    <span>${data.bundleName}</span>
                `;
                document.getElementById('appVersion').textContent = `Version ${data.shortVersion} (${data.version})`;
            }
            
            // Metrics
            if (data.totalSize) {
                document.getElementById('totalSize').textContent = (data.totalSize / 1048576).toFixed(1) + ' MB';
            }
            if (data.metrics && data.metrics.fileCount) {
                document.getElementById('fileCount').textContent = data.metrics.fileCount.toLocaleString();
            }
            if (data.frameworks) {
                document.getElementById('frameworksCount').textContent = data.frameworks.length;
            }
            
            // Calculate potential savings
            let totalSavings = 0;
            if (data.suggestions) {
                totalSavings = data.suggestions.reduce((sum, s) => sum + (s.estimatedSavings || 0), 0);
            }
            document.getElementById('potentialSavings').textContent = (totalSavings / 1048576).toFixed(1) + ' MB';

            // Populate suggestions
            populateSuggestions(data.suggestions || []);

            // Populate asset analysis
            if (data.assetAnalysisResults) {
                populateAssetAnalysis(data.assetAnalysisResults);
            }

            // Populate technical details
            populateTechnicalDetails(data);
        }

        function populateSuggestions(suggestions) {
            const container = document.getElementById('suggestionsContainer');
            if (suggestions.length === 0) {
                container.innerHTML = `
                    <div class="text-center py-8">
                        <i class="fas fa-check-circle text-green-500 text-4xl mb-4"></i>
                        <h3 class="text-lg font-medium text-gray-900">${translations.excellent}!</h3>
                        <p class="text-gray-600">${translations.optimized_message}</p>
                    </div>
                `;
                return;
            }

            // Categorize suggestions by priority based on estimated savings
            const categorizedSuggestions = {
                critical: suggestions.filter(s => s.estimatedSavings && s.estimatedSavings > 52428800), // > 50MB
                high: suggestions.filter(s => s.estimatedSavings && s.estimatedSavings > 10485760 && s.estimatedSavings <= 52428800), // 10-50MB
                medium: suggestions.filter(s => s.estimatedSavings && s.estimatedSavings > 1048576 && s.estimatedSavings <= 10485760), // 1-10MB
                low: suggestions.filter(s => !s.estimatedSavings || s.estimatedSavings <= 1048576) // < 1MB
            };

            container.innerHTML = '';

            // Critical Issues Section
            if (categorizedSuggestions.critical.length > 0) {
                container.appendChild(createPrioritySection(translations.critical_issues, categorizedSuggestions.critical, 'critical'));
            }

            // High Priority Section  
            if (categorizedSuggestions.high.length > 0) {
                container.appendChild(createPrioritySection(translations.high_priority, categorizedSuggestions.high, 'high'));
            }

            // Medium Priority Section
            if (categorizedSuggestions.medium.length > 0) {
                container.appendChild(createPrioritySection(translations.medium_priority, categorizedSuggestions.medium, 'medium'));
            }

            // Low Priority Section
            if (categorizedSuggestions.low.length > 0) {
                container.appendChild(createPrioritySection(translations.minor_optimizations, categorizedSuggestions.low, 'low'));
            }
        }

        function createPrioritySection(title, suggestions, priority) {
            const section = document.createElement('div');
            section.className = 'mb-8';

            const priorityColors = {
                critical: { bg: 'bg-red-50', border: 'border-red-200', title: 'text-red-800', icon: 'text-red-600' },
                high: { bg: 'bg-orange-50', border: 'border-orange-200', title: 'text-orange-800', icon: 'text-orange-600' },
                medium: { bg: 'bg-yellow-50', border: 'border-yellow-200', title: 'text-yellow-800', icon: 'text-yellow-600' },
                low: { bg: 'bg-blue-50', border: 'border-blue-200', title: 'text-blue-800', icon: 'text-blue-600' }
            };

            const colors = priorityColors[priority];
            const totalSavings = suggestions.reduce((sum, s) => sum + (s.estimatedSavings || 0), 0);

            section.innerHTML = `
                <div class="mb-4">
                    <h3 class="text-lg font-semibold ${colors.title} mb-2">${title}</h3>
                    <p class="text-sm text-gray-600">
                        ${suggestions.length} ${suggestions.length > 1 ? translations.issues : translations.issue} • 
                        ${translations.potential_savings}: <span class="font-medium text-green-600">📉 ${(totalSavings / 1048576).toFixed(1)} MB</span>
                    </p>
                </div>
                <div class="grid grid-cols-1 lg:grid-cols-2 gap-4">
                    ${suggestions.map(suggestion => createSuggestionCard(suggestion, colors)).join('')}
                </div>
            `;

            return section;
        }

        function createSuggestionCard(suggestion, colors) {
            const savingsMB = suggestion.estimatedSavings ? (suggestion.estimatedSavings / 1048576).toFixed(1) : '0.0';
            const description = suggestion.description.length > 150 ? 
                suggestion.description.substring(0, 150) + '...' : suggestion.description;

            return `
                <div class="suggestion-card ${colors.bg} ${colors.border} border rounded-xl p-5 hover:shadow-md transition-all duration-200">
                    <div class="flex items-start justify-between mb-3">
                        <h4 class="font-semibold text-gray-900 text-sm leading-5">${suggestion.title}</h4>
                        <div class="savings-badge bg-green-100 text-green-800 text-xs font-medium px-2 py-1 rounded-full whitespace-nowrap ml-3">
                            ${savingsMB} MB
                        </div>
                    </div>
                    <p class="text-sm text-gray-700 leading-relaxed mb-3">${description}</p>
                    <div class="flex items-center justify-between">
                        <div class="flex items-center text-xs text-gray-500">
                            <i class="fas fa-chart-line mr-1"></i>
                            ${translations.impact}: ${getImpactLevel(suggestion.estimatedSavings)}
                        </div>
                        <button class="fix-button text-xs bg-blue-500 hover:bg-blue-600 text-white hover:text-white px-4 py-2 rounded-lg font-medium transition-all duration-200 shadow-sm hover:shadow-md flex items-center" 
                                onclick="showSuggestionDetails(this.dataset.title, this.dataset.description, this.dataset.savings)"
                                data-title="${suggestion.title.replace(/"/g, '&quot;')}"
                                data-description="${suggestion.description.replace(/"/g, '&quot;').replace(/'/g, '&#39;')}"
                                data-savings="${savingsMB}">
                            <i class="fas fa-tools mr-1"></i>
                            ${translations.how_to_fix}
                        </button>
                    </div>
                </div>
            `;
        }

        function getImpactLevel(estimatedSavings) {
            if (!estimatedSavings) return translations.impact_levels.low;
            if (estimatedSavings > 52428800) return translations.impact_levels.critical;
            if (estimatedSavings > 10485760) return translations.impact_levels.high;
            if (estimatedSavings > 1048576) return translations.impact_levels.medium;
            return translations.impact_levels.low;
        }

        function showSuggestionDetails(title, description, savingsMB) {
            // Decode HTML entities
            const decodeHTMLEntities = (text) => {
                const textArea = document.createElement('textarea');
                textArea.innerHTML = text;
                return textArea.value;
            };
            
            title = decodeHTMLEntities(title);
            description = decodeHTMLEntities(description);
            
            // Create modal backdrop
            const modalBackdrop = document.createElement('div');
            modalBackdrop.className = 'fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center p-4';
            modalBackdrop.onclick = (e) => {
                if (e.target === modalBackdrop) {
                    document.body.removeChild(modalBackdrop);
                    document.body.style.overflow = '';
                }
            };

            // Format description for display with markdown-like formatting
            const formattedDescription = description
                .replace(/\n\n/g, '</p><p class="mb-4">')
                .replace(/\n/g, '<br>')
                .replace(/\*\*(.*?)\*\*/g, '<strong>$1</strong>')
                .replace(/• /g, '• ')
                .replace(/```(\w*)\n([\s\S]*?)\n```/g, '<div class="bg-gray-100 border rounded-lg p-3 my-3 font-mono text-sm overflow-x-auto"><pre class="text-xs">$2</pre></div>')
                .replace(/`([^`]+)`/g, '<code class="bg-gray-100 px-1 py-0.5 rounded text-sm font-mono">$1</code>')
                .replace(/🔧/g, '🔧')
                .replace(/💡/g, '💡')
                .replace(/⚠️/g, '⚠️')
                .replace(/💰/g, '💰')
                .replace(/📊/g, '📊')
                .replace(/🌍/g, '🌍');

            // Create modal content
            modalBackdrop.innerHTML = `
                <div class="bg-white rounded-xl shadow-2xl w-full mx-4 flex flex-col" style="max-width: 56rem; max-height: 90vh; min-height: 0;">
                    <div class="sticky top-0 bg-white border-b px-6 py-4 flex items-center justify-between rounded-t-xl">
                        <div>
                            <h2 class="text-xl font-semibold text-gray-800">${title}</h2>
                            <p class="text-sm text-blue-600 mt-1 flex items-center">
                                <i class="fas fa-tools mr-1"></i>
                                ${translations.implementation_guide}
                            </p>
                        </div>
                        <div class="flex items-center space-x-4">
                            <div class="text-sm font-medium text-green-600">
                                📉 Potential: ${savingsMB} MB
                            </div>
                            <button onclick="document.body.removeChild(this.closest('.fixed')); document.body.style.overflow = '';" 
                                    class="text-gray-400 hover:text-gray-600 text-xl font-bold">×</button>
                        </div>
                    </div>
                    <div class="px-6 py-6" style="flex: 1; overflow-y: auto; min-height: 0;">
                        <div class="prose prose-sm max-w-none text-gray-700">
                            <div class="mb-4">${formattedDescription}</div>
                        </div>
                    </div>
                    <div class="flex-shrink-0 bg-gray-50 px-6 py-4 flex justify-between items-center border-t rounded-b-xl">
                        <div class="text-sm text-gray-600 flex items-center">
                            <i class="fas fa-lightbulb text-yellow-500 mr-1"></i>
                            ${translations.guide_description}
                        </div>
                        <button onclick="document.body.removeChild(this.closest('.fixed')); document.body.style.overflow = '';" 
                                class="bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-lg font-medium">
                            ${translations.start_implementation}
                        </button>
                    </div>
                </div>
            `;

            // Add to body and prevent background scrolling
            document.body.appendChild(modalBackdrop);
            document.body.style.overflow = 'hidden';
        }

        function populateAssetAnalysis(results) {
            const container = document.getElementById('assetResults');
            if (results.length === 0) {
                container.innerHTML = `<p class="text-gray-600">${translations.no_assets_car}</p>`;
                return;
            }

            container.innerHTML = '';
            results.forEach(result => {
                const div = document.createElement('div');
                div.className = 'border border-gray-200 rounded-lg p-4';
                
                const statusClass = {
                    'success': 'bg-green-100 text-green-800',
                    'skipped': 'bg-yellow-100 text-yellow-800', 
                    'failed': 'bg-red-100 text-red-800',
                    'timeout': 'bg-gray-100 text-gray-800'
                }[result.analysisStatus] || 'bg-gray-100 text-gray-800';

                // Helper function to format sizes intelligently
                function formatSize(bytes) {
                    if (bytes >= 1048576) { // >= 1MB
                        const mb = bytes / 1048576;
                        return mb.toFixed(1) + ' MB';
                    } else if (bytes >= 1024) { // >= 1KB
                        const kb = bytes / 1024;
                        return kb.toFixed(1) + ' KB';
                    } else {
                        return bytes + ' B';
                    }
                }
                
                const sizeFormatted = formatSize(result.totalSize);
                const potentialFormatted = formatSize(result.optimizationPotential);
                
                const fileName = result.path.split('/').pop() || result.path;
                const assetsCount = result.assets ? result.assets.length : 0;
                const duplicatesCount = result.duplicates ? result.duplicates.length : 0;
                const unusedCount = result.unusedAssets ? result.unusedAssets.length : 0;
                
                div.innerHTML = `
                    <div class="flex items-start justify-between mb-3">
                        <div class="flex-1">
                            <h4 class="font-medium text-gray-900 mb-1">🎨 ${fileName}</h4>
                            <p class="text-sm text-gray-600">📁 ${translations.path}: ${result.path}</p>
                            <div class="mt-2 flex flex-wrap gap-3 text-sm">
                                <span class="text-gray-600">📏 ${translations.size}: <strong>${sizeFormatted}</strong></span>
                                <span class="text-blue-600">🖼️ ${translations.assets}: <strong>${assetsCount}</strong></span>
                                ${duplicatesCount > 0 ? `<span class="text-orange-600">🔄 ${translations.duplicates}: <strong>${duplicatesCount}</strong></span>` : ''}
                                ${unusedCount > 0 ? `<span class="text-red-600">🗑️ ${translations.unused}: <strong>${unusedCount}</strong></span>` : ''}
                            </div>
                            ${result.optimizationPotential > 0 ? `<p class="text-sm text-green-600 mt-2 font-medium">📉 ${translations.optimization_potential}: ${potentialFormatted}</p>` : ''}
                        </div>
                        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${statusClass}">
                            ${result.analysisStatus}
                        </span>
                    </div>
                    
                    ${result.errorMessage ? `<div class="bg-red-50 border border-red-200 rounded-lg p-3 mb-3">
                        <p class="text-sm text-red-700">⚠️ ${result.errorMessage}</p>
                    </div>` : ''}
                    
                    <div class="flex items-center justify-between pt-3 border-t border-gray-100">
                        <div class="text-xs text-gray-500">
                            ${getAssetAnalysisStatus(result)}
                        </div>
                        ${(assetsCount > 0 || duplicatesCount > 0 || unusedCount > 0) ? `
                        <button class="text-xs bg-blue-50 hover:bg-blue-100 text-blue-700 border border-blue-200 hover:border-blue-300 px-3 py-1.5 rounded-md transition-colors font-medium" 
                                onclick="showAssetDetails(this.dataset.result)" 
                                data-result="${encodeURIComponent(JSON.stringify(result))}">
                            ${translations.view_details}
                        </button>
                        ` : ''}
                    </div>
                `;
                container.appendChild(div);
            });
        }
        
        function getAssetAnalysisStatus(result) {
            if (result.analysisStatus === 'success') {
                return translations.status_messages.success;
            } else if (result.analysisStatus === 'skipped') {
                return translations.status_messages.skipped;
            } else if (result.analysisStatus === 'failed') {
                return translations.status_messages.failed;
            } else if (result.analysisStatus === 'timeout') {
                return translations.status_messages.timeout;
            }
            return translations.status_messages.unknown;
        }
        
        function showAssetDetails(encodedResult) {
            const result = JSON.parse(decodeURIComponent(encodedResult));
            const fileName = result.path.split('/').pop() || result.path;
            const sizeFormatted = formatSize(result.totalSize);
            
            // Helper function to format sizes intelligently
            function formatSize(bytes) {
                if (bytes >= 1048576) { // >= 1MB
                    const mb = bytes / 1048576;
                    return mb.toFixed(1) + ' MB';
                } else if (bytes >= 1024) { // >= 1KB
                    const kb = bytes / 1024;
                    return kb.toFixed(1) + ' KB';
                } else {
                    return bytes + ' B';
                }
            }
            
            const potentialFormatted = formatSize(result.optimizationPotential);
            
            // Create modal backdrop
            const modalBackdrop = document.createElement('div');
            modalBackdrop.className = 'fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center p-4';
            modalBackdrop.onclick = (e) => {
                if (e.target === modalBackdrop) {
                    document.body.removeChild(modalBackdrop);
                    document.body.style.overflow = '';
                }
            };

            // Build detailed analysis
            let detailsHtml = `
                <div class="mb-6">
                    <h3 class="text-lg font-semibold text-gray-800 mb-3">${translations.catalog_analysis}</h3>
                    <div class="grid grid-cols-2 gap-4 mb-4">
                        <div class="bg-gray-50 rounded-lg p-3">
                            <p class="text-sm font-medium text-gray-600">${translations.assets}</p>
                            <p class="text-xl font-bold text-blue-600">${result.assets ? result.assets.length : 0}</p>
                        </div>
                        <div class="bg-gray-50 rounded-lg p-3">
                            <p class="text-sm font-medium text-gray-600">${translations.size}</p>
                            <p class="text-xl font-bold text-purple-600">${sizeFormatted}</p>
                        </div>
                    </div>
                </div>
            `;

            // Duplicates section
            if (result.duplicates && result.duplicates.length > 0) {
                detailsHtml += `
                    <div class="mb-6">
                        <h4 class="text-md font-semibold text-orange-700 mb-3">${translations.duplicate_groups.replace('{0}', result.duplicates.length)}</h4>
                        <div class="space-y-3 max-h-60 overflow-y-auto">
                `;
                
                result.duplicates.forEach((duplicate, index) => {
                    const wasteFormatted = formatSize(duplicate.wastedSpace);
                    detailsHtml += `
                        <div class="bg-orange-50 border border-orange-200 rounded-lg p-3">
                            <div class="flex justify-between items-start">
                                <div class="flex-1">
                                    <p class="font-medium text-orange-800">${duplicate.variants.length} ${translations.identical_assets}</p>
                                    ${!duplicate.name.includes('[') || !duplicate.name.includes(']') ? 
                                        `<p class="text-sm text-orange-600">${duplicate.name}</p>` : 
                                        ''
                                    }
                                    <div class="text-xs text-orange-500 mt-2">
                                        ${duplicate.variants.map((v, i) => {
                                            const action = i === 0 ? ` ${translations.keep_this}` : ` ${translations.delete_this}`;
                                            // If it's a cross-name duplicate (different asset names), show just the list
                                            if (duplicate.name.includes('[') && duplicate.name.includes(']')) {
                                                // This is a cross-name duplicate like "[certif, star_off, star_on]"
                                                const assetNames = duplicate.name.slice(1, -1).split(', ');
                                                const assetName = assetNames[i] || `Asset ${i + 1}`;
                                                return `• ${assetName}`;
                                            } else {
                                                // Regular same-name duplicate, show rendition info
                                                if (v.renditionKey && v.renditionKey !== '') {
                                                    return `• <code class="bg-orange-100 px-1 rounded">${v.renditionKey}</code>`;
                                                } else {
                                                    const idiomText = v.idiom && v.idiom !== 'universal' ? ` (${v.idiom})` : '';
                                                    const sizeText = v.size && v.size !== '0x0' ? ` ${v.size}px` : '';
                                                    return `• ${v.scale}${idiomText}${sizeText}`;
                                                }
                                            }
                                        }).join('<br>')}
                                    </div>
                                </div>
                                <span class="text-xs bg-orange-200 text-orange-800 px-2 py-1 rounded-full">
                                    💰 ${wasteFormatted} ${translations.waste}
                                </span>
                            </div>
                        </div>
                    `;
                });
                
                detailsHtml += `
                        </div>
                        <div class="mt-3 p-3 bg-blue-50 border border-blue-200 rounded-lg">
                            <p class="text-sm text-blue-700">
                                <strong>${translations.how_to_fix}:</strong> ${translations.how_to_fix_duplicates}
                            </p>
                        </div>
                    </div>
                `;
            }

            // Unused assets section  
            if (result.unusedAssets && result.unusedAssets.length > 0) {
                detailsHtml += `
                    <div class="mb-6">
                        <h4 class="text-md font-semibold text-red-700 mb-3">${translations.unused_assets.replace('{0}', result.unusedAssets.length)}</h4>
                        <div class="space-y-2 max-h-48 overflow-y-auto">
                `;
                
                result.unusedAssets.slice(0, 15).forEach(asset => {
                    const assetSizeFormatted = formatSize(asset.sizeOnDisk || 0);
                    detailsHtml += `
                        <div class="bg-red-50 border border-red-200 rounded-lg p-2 text-sm">
                            <div class="flex justify-between items-center">
                                <div class="flex-1">
                                    <span class="font-medium text-red-800">${asset.name}</span>
                                    <span class="text-red-600 ml-2">(${asset.idiom}, ${asset.type})</span>
                                </div>
                                <span class="text-xs text-red-600">${assetSizeFormatted}</span>
                            </div>
                        </div>
                    `;
                });
                
                if (result.unusedAssets.length > 15) {
                    detailsHtml += `<p class="text-sm text-gray-600 text-center py-2">... and ${result.unusedAssets.length - 15} more assets</p>`;
                }
                
                detailsHtml += `
                        </div>
                        <div class="mt-3 p-3 bg-blue-50 border border-blue-200 rounded-lg">
                            <p class="text-sm text-blue-700">
                                <strong>${translations.unused_note}:</strong> ${translations.unused_note_desc}
                            </p>
                        </div>
                    </div>
                `;
            }

            // Asset breakdown by type
            if (result.assets && result.assets.length > 0) {
                const assetsByType = {};
                result.assets.forEach(asset => {
                    const type = asset.type || 'Unknown';
                    if (!assetsByType[type]) {
                        assetsByType[type] = { count: 0, totalSize: 0 };
                    }
                    assetsByType[type].count++;
                    assetsByType[type].totalSize += (asset.sizeOnDisk || 0);
                });

                detailsHtml += `
                    <div class="mb-6">
                        <h4 class="text-md font-semibold text-gray-700 mb-3">${translations.assets_by_type}</h4>
                        <div class="space-y-2">
                `;
                
                Object.entries(assetsByType)
                    .sort(([,a], [,b]) => b.totalSize - a.totalSize)
                    .slice(0, 8)
                    .forEach(([type, data]) => {
                        const typeSizeFormatted = formatSize(data.totalSize);
                        const percentage = ((data.totalSize / result.totalSize) * 100).toFixed(1);
                        detailsHtml += `
                            <div class="flex justify-between items-center py-2 px-3 bg-gray-50 rounded-lg">
                                <div class="flex items-center">
                                    <span class="font-medium text-gray-800">${type}</span>
                                    <span class="text-sm text-gray-600 ml-2">(${data.count} assets)</span>
                                </div>
                                <div class="text-right">
                                    <span class="font-medium text-gray-800">${typeSizeFormatted}</span>
                                    <span class="text-xs text-gray-500 ml-1">(${percentage}%)</span>
                                </div>
                            </div>
                        `;
                    });
                
                detailsHtml += `
                        </div>
                    </div>
                `;
            }

            // Optimization tips
            if (result.optimizationPotential > 0) {
                detailsHtml += `
                    <div class="mb-4">
                        <h4 class="text-md font-semibold text-green-700 mb-3">${translations.optimization_tips}</h4>
                        <div class="bg-green-50 border border-green-200 rounded-lg p-4">
                            <ul class="space-y-2 text-sm text-green-700">
                                <li>${translations.optimization_tips.tip_remove_duplicates ? translations.optimization_tips.tip_remove_duplicates.replace('{0}', result.duplicates ? result.duplicates.length : 0) : `🔧 Remove duplicates: Eliminate ${result.duplicates ? result.duplicates.length : 0} duplicate asset groups`}</li>
                                <li>${translations.optimization_tips.tip_clean_unused ? translations.optimization_tips.tip_clean_unused.replace('{0}', result.unusedAssets ? result.unusedAssets.length : 0) : `🗑️ Clean unused assets: Review ${result.unusedAssets ? result.unusedAssets.length : 0} potentially unused assets`}</li>
                                <li>${translations.optimization_tips.tip_format_optimization || '🎨 Format optimization: Convert PNG to WebP (iOS 14+) for 25-35% savings'}</li>
                                <li>${translations.optimization_tips.tip_resolution_review || '📱 Resolution review: Remove unnecessary @1x/@3x variants for your target devices'}</li>
                                <li>${translations.optimization_tips.tip_compression || '⚙️ Compression: Enable asset catalog compression in Xcode build settings'}</li>
                            </ul>
                            <div class="mt-3 pt-3 border-t border-green-300">
                                <p class="font-medium text-green-800">${translations.total_savings}: ${potentialFormatted}</p>
                            </div>
                        </div>
                    </div>
                `;
            }

            // Create modal content
            modalBackdrop.innerHTML = `
                <div class="bg-white rounded-xl shadow-2xl w-full mx-4 flex flex-col" style="max-width: 80rem; max-height: 90vh; min-height: 0;">
                    <div class="flex-shrink-0 bg-white border-b px-6 py-4 flex items-center justify-between rounded-t-xl">
                        <h2 class="text-xl font-semibold text-gray-800">🎨 ${fileName}</h2>
                        <div class="flex items-center space-x-4">
                            <div class="text-sm font-medium text-blue-600">
                                📏 ${sizeFormatted}
                            </div>
                            ${result.optimizationPotential > 0 ? `
                            <div class="text-sm font-medium text-green-600">
                                📉 Save ${potentialFormatted}
                            </div>
                            ` : ''}
                            <button onclick="document.body.removeChild(this.closest('.fixed')); document.body.style.overflow = '';" 
                                    class="text-gray-400 hover:text-gray-600 text-xl font-bold">×</button>
                        </div>
                    </div>
                    <div class="px-6 py-6" style="flex: 1; overflow-y: auto; min-height: 0;">
                        <div class="text-gray-700">
                            ${detailsHtml}
                        </div>
                    </div>
                    <div class="flex-shrink-0 bg-gray-50 px-6 py-4 flex justify-end border-t rounded-b-xl">
                        <button onclick="document.body.removeChild(this.closest('.fixed')); document.body.style.overflow = '';" 
                                class="bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-lg font-medium">
                            ${translations.got_it}
                        </button>
                    </div>
                </div>
            `;

            // Add to body and prevent background scrolling
            document.body.appendChild(modalBackdrop);
            document.body.style.overflow = 'hidden';
        }

        function populateTechnicalDetails(data) {
            // Binary info
            const binaryDetails = document.getElementById('binaryDetails');
            if (data.architectures) {
                binaryDetails.innerHTML = `
                    <div class="bg-gray-50 rounded-lg p-3 text-sm">
                        <p class="font-medium">${translations.architecture}: <span class="text-gray-600">${data.architectures.join(', ')}</span></p>
                    </div>
                    <div class="bg-gray-50 rounded-lg p-3 text-sm">
                        <p class="font-medium">${translations.executable_size}: <span class="text-gray-600">${(data.metrics?.executableSize / 1048576 || 0).toFixed(1)} MB</span></p>
                    </div>
                    <div class="bg-gray-50 rounded-lg p-3 text-sm">
                        <p class="font-medium">${translations.frameworks_size}: <span class="text-gray-600">${(data.metrics?.frameworksSize / 1048576 || 0).toFixed(1)} MB</span></p>
                    </div>
                    <div class="bg-gray-50 rounded-lg p-3 text-sm">
                        <p class="font-medium">${translations.resources_size}: <span class="text-gray-600">${(data.metrics?.resourcesSize / 1048576 || 0).toFixed(1)} MB</span></p>
                    </div>
                `;
            }

            // Localization info
            const locDetails = document.getElementById('localizationDetails');
            if (data.metrics) {
                locDetails.innerHTML = `
                    <div class="bg-gray-50 rounded-lg p-3 text-sm">
                        <p class="font-medium">${translations.languages}: <span class="text-gray-600">${data.metrics.localizationCount || 0}</span></p>
                    </div>
                    <div class="bg-gray-50 rounded-lg p-3 text-sm">
                        <p class="font-medium">${translations.supported_devices}: <span class="text-gray-600">${data.metrics.supportedDevices?.join(', ') || translations.universal}</span></p>
                    </div>
                    ${data.metrics.minimumOSVersion ? `
                    <div class="bg-gray-50 rounded-lg p-3 text-sm">
                        <p class="font-medium">${translations.min_os_version}: <span class="text-gray-600">${data.metrics.minimumOSVersion}</span></p>
                    </div>` : ''}
                `;
            }
        }
    </script>
    
    <!-- Footer with language selector -->
    <footer style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); padding: 15px 0; box-shadow: 0 -2px 10px rgba(0,0,0,0.1);">
        <div style="max-width: 1200px; margin: 0 auto; display: flex; justify-content: space-between; align-items: center; gap: 20px; padding: 0 20px;">
            <div style="color: white; font-size: 12px;">
                Powered by 🥖 <a href="https://orka.pw" target="_blank" style="color: white; text-decoration: underline;">Orka</a>
            </div>
            <div style="display: flex; align-items: center; gap: 15px;">
                <!-- Buy Me a Coffee button (small) -->
                <a href="https://www.buymeacoffee.com/horka_tv" target="_blank" style="display: inline-flex; align-items: center; background: rgba(255, 255, 255, 0.15); backdrop-filter: blur(10px); border-radius: 20px; padding: 6px 14px; text-decoration: none; color: white; font-size: 13px; font-weight: 500; border: 1px solid rgba(255, 255, 255, 0.2); transition: all 0.3s; white-space: nowrap;" onmouseover="this.style.background='rgba(255, 255, 255, 0.25)'" onmouseout="this.style.background='rgba(255, 255, 255, 0.15)'">
                    <span style="margin-right: 6px; font-size: 16px;">☕</span> Support
                </a>
                <label style="color: white; font-weight: 500; font-size: 14px;">#t("navigation.language"):</label>
                <select id="footerLanguageSelector" style="padding: 8px 15px; border-radius: 8px; border: none; background: white; color: #333; font-size: 14px; cursor: pointer; min-width: 150px;">
                    <option value="fr" #if(language == "fr"):selected#endif>🇫🇷 Français</option>
                    <option value="en" #if(language == "en"):selected#endif>🇺🇸 English</option>
                    <option value="es" #if(language == "es"):selected#endif>🇪🇸 Español</option>
                    <option value="de" #if(language == "de"):selected#endif>🇩🇪 Deutsch</option>
                </select>
            </div>
        </div>
    </footer>
    
    <script>
        // Footer language selector functionality
        document.getElementById('footerLanguageSelector').addEventListener('change', function(e) {
            const selectedLanguage = e.target.value;
            
            // Send language change request
            fetch('/language/set', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    language: selectedLanguage,
                    redirectTo: window.location.pathname
                })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Reload page to apply new language
                    window.location.reload();
                }
            })
            .catch(error => {
                console.error('Error changing language:', error);
            });
        });
    </script>
</body>
</html>