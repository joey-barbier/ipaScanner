services:
  ipascanner:
    image: ghcr.io/joey-barbier/ipascanner:${IMAGE_TAG:-latest}
    container_name: ipascanner
    restart: unless-stopped
    environment:
      # Environment variables
      ENV: ${ENV:-production}
      LOG_LEVEL: ${LOG_LEVEL:-info}
      
      # Application settings
      ENABLE_CORS: ${ENABLE_CORS:-false}
      MAX_UPLOAD_SIZE: ${MAX_UPLOAD_SIZE:-500mb}
      DATABASE_URL: ${DATABASE_URL:-sqlite:///app/data/ipascanner.sqlite}
      
      # Analysis settings
      ANALYSIS_TIMEOUT: ${ANALYSIS_TIMEOUT:-300}
      CLEANUP_INTERVAL: ${CLEANUP_INTERVAL:-3600}
      
      # Security
      SECRET_KEY: ${SECRET_KEY}
    volumes:
      - /var/www/ipascanner-data/data:/app/data
      - /var/www/ipascanner-data/uploads:/app/uploads
      - /var/www/ipascanner-data/logs:/app/logs
      - /var/www/ipascanner-data/temp:/app/temp
    networks:
      - web
      - ipascanner-network
    labels:
      - traefik.enable=true
      - traefik.docker.network=web
      - traefik.http.routers.ipascanner.rule=Host(`ipa.tips`)
      - traefik.http.routers.ipascanner.entrypoints=websecure
      - traefik.http.routers.ipascanner.tls.certresolver=myresolver
      - traefik.http.services.ipascanner.loadbalancer.server.port=8080
      # File upload size limit
      - traefik.http.middlewares.ipascanner-limit.buffering.maxRequestBodyBytes=524288000
      - traefik.http.routers.ipascanner.middlewares=ipascanner-limit
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '2.0'
        reservations:
          memory: 1G
          cpus: '1.0'
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Cleanup service for temporary files
  cleanup:
    image: alpine:latest
    container_name: ipascanner-cleanup
    restart: unless-stopped
    volumes:
      - /var/www/ipascanner-data/temp:/temp
      - /var/www/ipascanner-data/uploads:/uploads
    command: |
      sh -c "
      while true; do
        echo 'Cleaning up old files...'
        find /temp -type f -mtime +1 -delete
        find /uploads -type f -mtime +7 -delete
        echo 'Cleanup completed'
        sleep 3600
      done"
    networks:
      - ipascanner-network
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"

  # Optional: Backup service
  backup:
    image: alpine:latest
    container_name: ipascanner-backup
    restart: unless-stopped
    volumes:
      - /var/www/ipascanner-data/data:/data
      - /var/www/ipascanner-data/backups:/backups
    command: |
      sh -c "
      while true; do
        echo 'Creating backup...'
        tar -czf /backups/backup-$$(date +%Y%m%d_%H%M%S).tar.gz -C /data .
        find /backups -name '*.tar.gz' -mtime +30 -delete
        echo 'Backup completed'
        sleep 86400
      done"
    networks:
      - ipascanner-network
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"

networks:
  ipascanner-network:
    driver: bridge
  web:
    external: true  # réseau créé une seule fois côté VPS (traefik)